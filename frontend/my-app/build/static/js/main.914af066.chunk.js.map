{"version":3,"sources":["images/noimage.jpg","utils/formWhen.js","components/Card.jsx","components/Header.jsx","components/SocialMediaLinks.jsx","components/Footer.jsx","components/Loading.jsx","Pages/Top.jsx","Pages/View.jsx","Pages/NotFound.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Card","props","imgUrl","ogpImageUrl","Noimage","maxW","borderWidth","borderRadius","overflow","boxShadow","to","title","src","alt","maxHeight","p","mt","fontWeight","as","lineHeight","isTruncated","d","alignItems","ml","color","fontSize","productCompanies","Header","align","justify","wrap","padding","bg","mr","size","letterSpacing","SocialMediaLinks","variant","href","aria-label","icon","Footer","role","mx","py","px","base","md","direction","spacing","sm","Date","getFullYear","Loading","mb","thickness","speed","emptyColor","whenData","nowYear","coolArray","i","j","push","index","year","cool","nowYearAndCool","Top","ipaddress","useState","animeData","setAnimeData","isLoading","setIsLoading","userSelectYearAndCool","localStorage","getItem","React","value","setValue","handleChange","event","target","console","log","useEffect","a","setItem","JSONDATA","JSON","parse","axios","get","timeout","res","stringify","data","yearNumber","slice","coolName","id","onChange","placeholder","map","status","message","h","pr","pl","style","display","verticalAlign","templateColumns","gap","titleEn","title_en","product_companies","ogp_image_url","ogpDescription","ogp_description","publicUrl","public_url","twitterAccount","twitter_account","twitterHashTag","twitter_hash_tag","sex","sequel","View","name","useParams","when","animeDataMatched","animeIndex","findIndex","getAnimeDataByName","history","useHistory","centerContent","colorScheme","onClick","NotFound","w","App","exact","path","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.914af066.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noimage.9348aed4.jpg\";","export const whenData = [];\r\nconst day = new Date();\r\nconst nowYear = day.getFullYear();\r\nconst startYear = 2013;\r\nconst coolArray = [\"冬\", \"春\", \"夏\", \"秋\"];\r\nfor (let i = startYear; i <= nowYear; i++) {\r\n  for (let j = 0; j < 4; j++) {\r\n    whenData.push({ index: j + 1, year: i, cool: coolArray[j] });\r\n  }\r\n}\r\nexport const nowYearAndCool = nowYear + \"/1\";\r\n","import { Box, Image, Badge, Center } from \"@chakra-ui/react\";\r\nimport Noimage from \"../images/noimage.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Card(props) {\r\n  let imgUrl = \"\";\r\n  if (props.ogpImageUrl === \"not_found\") {\r\n    imgUrl = Noimage;\r\n  } else {\r\n    imgUrl = props.ogpImageUrl;\r\n  }\r\n  return (\r\n    <Box\r\n      maxW=\"sm\"\r\n      borderWidth=\"1px\"\r\n      borderRadius=\"lg\"\r\n      overflow=\"hidden\"\r\n      boxShadow=\"lg\"\r\n    >\r\n      <Link to={\"/anime/\" + props.title}>\r\n        <Center>\r\n          <Image src={imgUrl} alt={props.title} maxHeight=\"200px\" />\r\n        </Center>\r\n\r\n        <Box p=\"6\">\r\n          <Box\r\n            mt=\"1\"\r\n            fontWeight=\"semibold\"\r\n            as=\"h4\"\r\n            lineHeight=\"tight\"\r\n            isTruncated\r\n          >\r\n            {props.title}\r\n          </Box>\r\n\r\n          <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\r\n            <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\r\n              {props.productCompanies}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Link>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { Heading, Flex } from \"@chakra-ui/react\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <Flex\r\n      as=\"nav\"\r\n      align=\"center\"\r\n      justify=\"space-between\"\r\n      wrap=\"wrap\"\r\n      padding={6}\r\n      bg=\"teal.500\"\r\n      color=\"white\"\r\n    >\r\n      <Flex align=\"center\" mr={5}>\r\n        <Heading as=\"h1\" size=\"lg\" letterSpacing={\"tighter\"}>\r\n          Anime Library\r\n        </Heading>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { ButtonGroup, IconButton } from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { FaGithub, FaTwitter } from \"react-icons/fa\";\r\nimport { AiFillApi } from \"react-icons/ai\";\r\n\r\nexport const SocialMediaLinks = (props) => (\r\n  <ButtonGroup variant=\"ghost\" color=\"gray.600\" {...props}>\r\n    <IconButton\r\n      as=\"a\"\r\n      href=\"https://twitter.com/uutan1108\"\r\n      aria-label=\"LinkedIn\"\r\n      icon={<FaTwitter fontSize=\"20px\" />}\r\n    />\r\n    <IconButton\r\n      as=\"a\"\r\n      href=\"https://github.com/OHMORIYUSUKE\"\r\n      aria-label=\"GitHub\"\r\n      icon={<FaGithub fontSize=\"20px\" />}\r\n    />\r\n    <IconButton\r\n      as=\"a\"\r\n      href=\"https://github.com/Project-ShangriLa/sora-playframework-scala\"\r\n      aria-label=\"Twitter\"\r\n      icon={<AiFillApi fontSize=\"20px\" />}\r\n    />\r\n  </ButtonGroup>\r\n);\r\n","import { Box, Stack, Text } from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { SocialMediaLinks } from \"./SocialMediaLinks\";\r\n\r\nexport const Footer = () => (\r\n  <Box\r\n    as=\"footer\"\r\n    role=\"contentinfo\"\r\n    mx=\"auto\"\r\n    maxW=\"7xl\"\r\n    py=\"10\"\r\n    px={{ base: \"4\", md: \"8\" }}\r\n  >\r\n    <Stack>\r\n      <Stack direction=\"row\" spacing=\"4\" align=\"center\" justify=\"space-between\">\r\n        <Text fontSize=\"xl\">Anime Library</Text>\r\n        <SocialMediaLinks />\r\n      </Stack>\r\n      <Text fontSize=\"sm\" base=\"center\" sm=\"start\">\r\n        &copy; {new Date().getFullYear()} Anime Library. All rights reserved.\r\n      </Text>\r\n    </Stack>\r\n  </Box>\r\n);\r\n\r\nexport default Footer;\r\n","import * as React from \"react\";\r\nimport { Spinner, Center } from \"@chakra-ui/react\";\r\n\r\nexport const Loading = () => (\r\n  <>\r\n    <Center mt={8} mb={8}>\r\n      <Spinner\r\n        thickness=\"4px\"\r\n        speed=\"0.65s\"\r\n        emptyColor=\"gray.200\"\r\n        color=\"teal.500\"\r\n        size=\"xl\"\r\n      />\r\n    </Center>\r\n  </>\r\n);\r\n\r\nexport default Loading;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../components/Card\";\r\nimport {\r\n  Grid,\r\n  GridItem,\r\n  Box,\r\n  Text,\r\n  Alert,\r\n  AlertIcon,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\nimport { FormControl, FormLabel, Select } from \"@chakra-ui/react\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport Loading from \"../components/Loading\";\r\nimport { whenData, nowYearAndCool } from \"../utils/formWhen\";\r\nimport { FiAlertTriangle } from \"react-icons/fi\";\r\n\r\nconst Top = () => {\r\n  const ipaddress = \"localhost\";\r\n\r\n  const [animeData, setAnimeData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  let userSelectYearAndCool = \"\";\r\n  if (localStorage.getItem(\"when\")) {\r\n    userSelectYearAndCool = localStorage.getItem(\"when\");\r\n  } else {\r\n    userSelectYearAndCool = nowYearAndCool;\r\n  }\r\n  const [value, setValue] = React.useState(userSelectYearAndCool);\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  console.log(value);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        if (localStorage.getItem(\"animeData\" + value)) {\r\n          localStorage.setItem(\"when\", value);\r\n          const JSONDATA = JSON.parse(\r\n            localStorage.getItem(\"animeData\" + value)\r\n          );\r\n          setAnimeData(JSONDATA);\r\n        } else {\r\n          setIsLoading(true);\r\n          localStorage.setItem(\"when\", value);\r\n          const res = await axios.get(\r\n            `http://${ipaddress}:3031/api/v1/${value}`,\r\n            {\r\n              timeout: 3000000,\r\n            }\r\n          );\r\n          localStorage.setItem(\"animeData\" + value, JSON.stringify(res.data));\r\n          setAnimeData(res.data);\r\n          setIsLoading(false);\r\n        }\r\n        const res = await axios.get(\r\n          `http://${ipaddress}:3031/api/v1/${value}`,\r\n          {\r\n            timeout: 3000000,\r\n          }\r\n        );\r\n        localStorage.setItem(\"animeData\" + value, JSON.stringify(res.data));\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    })();\r\n  }, [value]);\r\n\r\n  console.log(animeData);\r\n\r\n  //const when = localStorage.getItem(\"when\");\r\n  const yearNumber = userSelectYearAndCool.slice(0, 4);\r\n  const coolNumber = userSelectYearAndCool.slice(-1);\r\n\r\n  let coolName = \"\";\r\n  switch (coolNumber) {\r\n    case \"1\":\r\n      coolName = \"冬\";\r\n      break;\r\n    case \"2\":\r\n      coolName = \"春\";\r\n      break;\r\n    case \"3\":\r\n      coolName = \"夏\";\r\n      break;\r\n    default:\r\n      coolName = \"秋\";\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Box mt={7} mb={7} ml={5} mr={5}>\r\n          <FormControl id=\"when\">\r\n            <FormLabel>アニメの放送時期</FormLabel>\r\n            <Select\r\n              onChange={handleChange}\r\n              placeholder=\"知りたい放送時期を選択してください\"\r\n            >\r\n              {whenData.map((data) => (\r\n                <option value={data.year + \"/\" + data.index}>\r\n                  {data.year} / {data.cool}アニメ\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <Alert status=\"warning\" mt={3}>\r\n            <AlertIcon />\r\n            {yearNumber + \" / \" + coolName}\r\n            アニメ が選択されています。表示まで時間がかかることがあります。\r\n          </Alert>\r\n        </Box>\r\n        <Box mt={7} mb={7} ml={5} mr={5}>\r\n          <Loading />\r\n        </Box>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n\r\n  //データがないとき\r\n  if (animeData.message === \"no_data\") {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Box mt={7} mb={7} ml={5} mr={5}>\r\n          <FormControl id=\"when\">\r\n            <FormLabel>アニメの放送時期</FormLabel>\r\n            <Select\r\n              onChange={handleChange}\r\n              placeholder=\"知りたい放送時期を選択してください\"\r\n            >\r\n              {whenData.map((data) => (\r\n                <option value={data.year + \"/\" + data.index}>\r\n                  {data.year} / {data.cool}アニメ\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <Alert status=\"warning\" mt={3}>\r\n            <AlertIcon />\r\n            {yearNumber + \" / \" + coolName}\r\n            アニメ が選択されています。表示まで時間がかかることがあります。\r\n          </Alert>\r\n        </Box>\r\n        <Box mt={7} mb={7} ml={5} mr={5}>\r\n          <Center mt={20}>\r\n            <Center bg=\"teal\" h=\"200px\" color=\"white\" borderRadius=\"lg\">\r\n              <Text fontSize=\"xl\" pr={30} pl={30}>\r\n                <FiAlertTriangle\r\n                  style={{ display: \"inline-flex\", verticalAlign: \"middle\" }}\r\n                />\r\n                データがありません。 もう一度選択してください。\r\n                <FiAlertTriangle\r\n                  style={{ display: \"inline-flex\", verticalAlign: \"middle\" }}\r\n                />\r\n              </Text>\r\n            </Center>\r\n          </Center>\r\n        </Box>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Box mt={7} mb={7} ml={5} mr={5}>\r\n        <FormControl id=\"when\">\r\n          <FormLabel>アニメの放送時期</FormLabel>\r\n          <Select\r\n            onChange={handleChange}\r\n            placeholder=\"知りたい放送時期を選択してください\"\r\n          >\r\n            {whenData.map((data) => (\r\n              <option value={data.year + \"/\" + data.index}>\r\n                {data.year} / {data.cool}アニメ\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <Alert status=\"success\" mt={3}>\r\n          <AlertIcon />\r\n          {yearNumber + \" / \" + coolName}\r\n          アニメ が表示されています。\r\n        </Alert>\r\n      </Box>\r\n      <Box mt={7} mb={7} ml={5} mr={5}>\r\n        <Grid templateColumns=\"repeat(4, 1fr)\" gap={2}>\r\n          {animeData.map((data) => (\r\n            <Card\r\n              title={data.title}\r\n              titleEn={data.title_en}\r\n              productCompanies={data.product_companies}\r\n              ogpImageUrl={data.ogp_image_url}\r\n              ogpDescription={data.ogp_description}\r\n              publicUrl={data.public_url}\r\n              twitterAccount={data.twitter_account}\r\n              twitterHashTag={data.twitter_hash_tag}\r\n              sex={data.sex}\r\n              sequel={data.sequel}\r\n            />\r\n          ))}\r\n        </Grid>\r\n      </Box>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Top;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, useParams } from \"react-router-dom\";\r\nimport {\r\n  Center,\r\n  Box,\r\n  Container,\r\n  Text,\r\n  Image,\r\n  Divider,\r\n  Link,\r\n  Flex,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\nimport Noimage from \"../images/noimage.jpg\";\r\nimport { RiBuildingFill } from \"react-icons/ri\";\r\nimport { BiLinkExternal, BiBadgeCheck } from \"react-icons/bi\";\r\nimport { BsHash } from \"react-icons/bs\";\r\nimport { AiOutlineCaretLeft } from \"react-icons/ai\";\r\nimport { GrUserManager, GrUserFemale } from \"react-icons/gr\";\r\nimport { FaTwitter } from \"react-icons/fa\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst View = () => {\r\n  let { name } = useParams();\r\n\r\n  const when = localStorage.getItem(\"when\");\r\n  const JSONDATA = JSON.parse(localStorage.getItem(\"animeData\" + when));\r\n\r\n  const getAnimeDataByName = (name) => {\r\n    const animeIndex = JSONDATA.findIndex((data) => data.title === name);\r\n    return JSONDATA[animeIndex];\r\n  };\r\n\r\n  const animeDataMatched = getAnimeDataByName(name);\r\n\r\n  console.log(animeDataMatched);\r\n\r\n  if (animeDataMatched.ogp_image_url === \"not_found\") {\r\n    animeDataMatched.ogp_image_url = Noimage;\r\n  }\r\n  if (animeDataMatched.ogp_description === \"not_found\") {\r\n    animeDataMatched.ogp_description = \"\";\r\n  }\r\n\r\n  if (animeDataMatched.sequel === 0) {\r\n    animeDataMatched.sequel = 1;\r\n  }\r\n\r\n  const history = useHistory();\r\n  const toTop = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Center mt={30}>\r\n        <Container maxW=\"4xl\" centerContent>\r\n          <Box padding=\"4\" bg=\"gray.100\" maxW=\"4xl\">\r\n            <Center>\r\n              <Image\r\n                src={animeDataMatched.ogp_image_url}\r\n                alt={animeDataMatched.title}\r\n              />\r\n            </Center>\r\n            <Text fontSize=\"3xl\" mt={3}>\r\n              {animeDataMatched.title}\r\n            </Text>\r\n            <Text fontSize=\"md\" color=\"gray.600\" mb={3}>\r\n              {animeDataMatched.title_en}\r\n            </Text>\r\n            <Divider />\r\n            <Text fontSize=\"xl\" mt={5} mb={5}>\r\n              {animeDataMatched.ogp_description}\r\n            </Text>\r\n            <Flex>\r\n              <Text fontSize=\"xl\" mr={6}>\r\n                <RiBuildingFill\r\n                  style={{ display: \"inline-flex\", verticalAlign: \"middle\" }}\r\n                />\r\n                {animeDataMatched.product_companies !== \"\"\r\n                  ? animeDataMatched.product_companies\r\n                  : \"制作会社不明\"}\r\n              </Text>\r\n              <Text fontSize=\"xl\" mr={6}>\r\n                全 {animeDataMatched.sequel} 期\r\n              </Text>\r\n              {animeDataMatched.sex ? (\r\n                <Text fontSize=\"xl\">\r\n                  <GrUserFemale\r\n                    style={{ display: \"inline-flex\", verticalAlign: \"middle\" }}\r\n                  />\r\n                  女性向け\r\n                </Text>\r\n              ) : (\r\n                <Text fontSize=\"xl\">\r\n                  <GrUserManager\r\n                    style={{ display: \"inline-flex\", verticalAlign: \"middle\" }}\r\n                  />{\" \"}\r\n                  男性向け\r\n                </Text>\r\n              )}\r\n            </Flex>\r\n            <Flex mt={2}>\r\n              <Text mr={6} fontSize=\"lg\">\r\n                <Link\r\n                  href={\r\n                    \"https://twitter.com/hashtag/\" +\r\n                    animeDataMatched.twitter_hash_tag\r\n                  }\r\n                  color=\"teal.500\"\r\n                >\r\n                  <BsHash\r\n                    style={{ display: \"inline-flex\", verticalAlign: \"middle\" }}\r\n                  />\r\n                  {animeDataMatched.twitter_hash_tag}\r\n                </Link>\r\n              </Text>\r\n              <Text mr={6} fontSize=\"lg\">\r\n                <Link\r\n                  color=\"teal.500\"\r\n                  href={\r\n                    \"https://twitter.com/\" + animeDataMatched.twitter_account\r\n                  }\r\n                >\r\n                  <FaTwitter\r\n                    style={{ display: \"inline-flex\", verticalAlign: \"middle\" }}\r\n                  />{\" \"}\r\n                  {animeDataMatched.title}{\" \"}\r\n                  <BiBadgeCheck\r\n                    style={{ display: \"inline-flex\", verticalAlign: \"middle\" }}\r\n                  />\r\n                </Link>\r\n              </Text>\r\n            </Flex>\r\n            <Text fontSize=\"lg\" mt={4}>\r\n              <Link color=\"teal.500\" href={animeDataMatched.public_url}>\r\n                公式サイト\r\n                <BiLinkExternal\r\n                  style={{ display: \"inline-flex\", verticalAlign: \"middle\" }}\r\n                />\r\n              </Link>\r\n            </Text>\r\n          </Box>\r\n        </Container>\r\n      </Center>\r\n      <Center mt={10}>\r\n        <Button colorScheme=\"teal\" variant=\"outline\" size=\"lg\" onClick={toTop}>\r\n          <AiOutlineCaretLeft\r\n            style={{ display: \"inline-flex\", verticalAlign: \"middle\" }}\r\n          />{\" \"}\r\n          戻る\r\n        </Button>\r\n      </Center>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\nexport default View;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Center, Text } from \"@chakra-ui/react\";\r\nimport { AiOutlineCaretRight } from \"react-icons/ai\";\r\nimport Footer from \"../components/Footer\";\r\nimport Header from \"../components/Header\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Center mt={70}>\r\n        <Center bg=\"teal\" h=\"200px\" w=\"400px\" color=\"white\" borderRadius=\"lg\">\r\n          <Text fontSize=\"4xl\">404 NotFound</Text>\r\n        </Center>\r\n      </Center>\r\n      <Center mt={30} mb={20}>\r\n        <Link to=\"/\">\r\n          TOPページへ{\" \"}\r\n          <AiOutlineCaretRight\r\n            style={{ display: \"inline-flex\", verticalAlign: \"middle\" }}\r\n          />\r\n        </Link>\r\n      </Center>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\nimport Top from \"./Pages/Top\";\nimport View from \"./Pages/View\";\nimport NotFound from \"./Pages/NotFound\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nfunction App() {\n  const history = useHistory();\n  return (\n    <ChakraProvider>\n      <BrowserRouter history={history}>\n        <Switch>\n          <Route exact path=\"/\" component={Top} />\n          <Route exact path=\"/anime/:name\" render={() => <View />} />\n          <Route component={NotFound} />\n        </Switch>\n      </BrowserRouter>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}